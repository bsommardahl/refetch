// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var List           = require("bs-platform/lib/js/list.js");
var Curry          = require("bs-platform/lib/js/curry.js");
var Js_dict        = require("bs-platform/lib/js/js_dict.js");
var Pervasives     = require("bs-platform/lib/js/pervasives.js");
var Refetch__Utils = require("./Refetch__Utils.js");

function _encode(headers) {
  return Js_dict.fromList(List.map((function (param) {
                    if (typeof param === "number") {
                      return Pervasives.failwith("TODO");
                    } else {
                      var variant = param[0];
                      if (variant >= 246273140) {
                        if (variant !== 826042841) {
                          if (variant !== 1022564063) {
                            return Pervasives.failwith("TODO");
                          } else {
                            return /* tuple */[
                                    "Content-Length",
                                    Pervasives.string_of_int(param[1])
                                  ];
                          }
                        } else {
                          var scheme = param[1];
                          var value;
                          if (scheme[0] >= -881134847) {
                            value = "Bearer " + (String(scheme[1]) + "");
                          } else {
                            var match = scheme[1];
                            var encoded = Curry._1(Refetch__Utils.btoa, "" + (String(match[0]) + (":" + (String(match[1]) + ""))));
                            value = "Basic " + (String(encoded) + "");
                          }
                          return /* tuple */[
                                  "Authorization",
                                  value
                                ];
                        }
                      } else if (variant !== 4099528) {
                        if (variant >= 246273139) {
                          return /* tuple */[
                                  "Content-Type",
                                  param[1]
                                ];
                        } else {
                          return Pervasives.failwith("TODO");
                        }
                      } else {
                        var match$1 = param[1];
                        return /* tuple */[
                                match$1[0],
                                match$1[1]
                              ];
                      }
                    }
                  }), headers));
}

var Cookie = 0;

var Mime = 0;

var Utils = 0;

exports.Cookie  = Cookie;
exports.Mime    = Mime;
exports.Utils   = Utils;
exports._encode = _encode;
/* Js_dict Not a pure module */
