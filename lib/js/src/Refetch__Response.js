// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block           = require("bs-platform/lib/js/block.js");
var Resync          = require("./Resync.js");
var Refetch__Status = require("./Refetch__Status.js");

function _getStatus(response) {
  return /* record */[
          /* code */Refetch__Status.codeFromInt(response.status),
          /* reason */response.statusText
        ];
}

function _make(res) {
  var status = _getStatus(res);
  var n = res.status;
  if (n >= 200 && n <= 299) {
    return /* Ok */Block.__(0, [
              status,
              res
            ]);
  } else {
    return /* Error */Block.__(1, [
              status,
              res
            ]);
  }
}

function body(response) {
  return response.body;
}

function text(response) {
  return Resync.Future[/* fromJSPromise */10](response.text());
}

function json(response) {
  return Resync.Future[/* fromJSPromise */10](response.json());
}

var Body = 0;

var Headers = 0;

var Status = 0;

exports.Body       = Body;
exports.Headers    = Headers;
exports.Status     = Status;
exports._getStatus = _getStatus;
exports._make      = _make;
exports.body       = body;
exports.text       = text;
exports.json       = json;
/* No side effect */
